// @generated by protoc-gen-es v1.3.0 with parameter "target=js+dts"
// @generated from file auth/v1/auth.proto (package acme.authpb.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message acme.authpb.v1.LoginRequest
 */
export declare class LoginRequest extends Message<LoginRequest> {
  /**
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * @generated from field: string password = 2;
   */
  password: string;

  constructor(data?: PartialMessage<LoginRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "acme.authpb.v1.LoginRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LoginRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LoginRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LoginRequest;

  static equals(a: LoginRequest | PlainMessage<LoginRequest> | undefined, b: LoginRequest | PlainMessage<LoginRequest> | undefined): boolean;
}

/**
 * @generated from message acme.authpb.v1.LoginResponse
 */
export declare class LoginResponse extends Message<LoginResponse> {
  /**
   * @generated from field: string token = 1;
   */
  token: string;

  constructor(data?: PartialMessage<LoginResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "acme.authpb.v1.LoginResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LoginResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LoginResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LoginResponse;

  static equals(a: LoginResponse | PlainMessage<LoginResponse> | undefined, b: LoginResponse | PlainMessage<LoginResponse> | undefined): boolean;
}

/**
 * @generated from message acme.authpb.v1.TokenRequest
 */
export declare class TokenRequest extends Message<TokenRequest> {
  /**
   * @generated from field: string token = 1;
   */
  token: string;

  constructor(data?: PartialMessage<TokenRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "acme.authpb.v1.TokenRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TokenRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TokenRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TokenRequest;

  static equals(a: TokenRequest | PlainMessage<TokenRequest> | undefined, b: TokenRequest | PlainMessage<TokenRequest> | undefined): boolean;
}

/**
 * @generated from message acme.authpb.v1.TokenResponse
 */
export declare class TokenResponse extends Message<TokenResponse> {
  /**
   * @generated from field: bool valid = 1;
   */
  valid: boolean;

  constructor(data?: PartialMessage<TokenResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "acme.authpb.v1.TokenResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TokenResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TokenResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TokenResponse;

  static equals(a: TokenResponse | PlainMessage<TokenResponse> | undefined, b: TokenResponse | PlainMessage<TokenResponse> | undefined): boolean;
}

